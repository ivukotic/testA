name: Test and Build Docker Images

on:
  push:
    branches:
      - "*"
  pull_request:
  workflow_call:

env:
  DOCKERHUB_ORG: sslhep

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v3.5.3

      - name: Read file contents
        working-directory: ./.github/workflows
        id: set-matrix
        run: |
          echo "matrix<<EOF" >> "$GITHUB_OUTPUT"
          cat ./deploy-config.json >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

  test:
    needs: build-matrix
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        app: "${{fromJson(needs.build-matrix.outputs.matrix)}}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v3.5.3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.6.1
        with:
          python-version: ${{ matrix.python-version }}
        if: ${{ matrix.app.test_required }}

  publish:
    needs: [build-matrix, test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: ${{fromJson(needs.build-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Extract tag name
        shell: bash
        run: echo "{imagetag}={$(echo sslhep/${{matrix.app.image_name}}:${GITHUB_REF##*/})}" >> $GITHUB_OUTPUT
        # run: echo "##[set-output name=imagetag;]$(echo sslhep/${{matrix.app.image_name}}:${GITHUB_REF##*/})"
        id: extract_tag_name

  etest:
    needs: [build-matrix, test, publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Read file contents
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "$GITHUB_OUTPUT"

      - name: File contents
        run: echo "${ steps.read_file.outputs.contents }"
